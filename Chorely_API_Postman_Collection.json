{
	"info": {
		"_postman_id": "chorely-api-collection",
		"name": "Chorely API",
		"description": "Complete API collection for testing Chorely backend endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\",\n  \"homeIds\": [\"{{home_id}}\"],\n  \"name\": \"{{user_name}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by Email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/{{user_email}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Homes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/{{user_email}}/home",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_email}}",
								"home"
							]
						}
					},
					"response": []
				},
				{
					"name": "Join Home",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\",\n  \"homeId\": \"{{home_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/join",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "Leave Home",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\",\n  \"homeId\": \"{{home_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/leave",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"leave"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Homes",
			"item": [
				{
					"name": "Create Home",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{home_name}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/homes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"homes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Homes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/homes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"homes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Home by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/homes/{{home_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"homes",
								"{{home_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Home Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/homes/{{home_id}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"homes",
								"{{home_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Home Quota",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"weeklyPointQuota\": 100\n}"
						},
						"url": {
							"raw": "{{base_url}}/homes/{{home_id}}/quota",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"homes",
								"{{home_id}}",
								"quota"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Chores",
			"item": [
				{
					"name": "Create Chore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{chore_name}}\",\n  \"description\": \"{{chore_description}}\",\n  \"time\": \"{{chore_time}}\",\n  \"icon\": \"{{chore_icon}}\",\n  \"home_id\": \"{{home_id}}\",\n  \"points\": {{chore_points}},\n  \"user_email\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chores",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Chore by UUID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chores",
								"{{chore_uuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Available Chores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/available/{{home_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chores",
								"available",
								"{{home_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Unapproved Chores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/unapproved/{{home_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chores",
								"unapproved",
								"{{home_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Chores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/user?email={{user_email}}&homeId={{home_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chores",
								"user"
							],
							"query": [
								{
									"key": "email",
									"value": "{{user_email}}"
								},
								{
									"key": "homeId",
									"value": "{{home_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve Chore",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}/approve",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chores",
								"{{chore_uuid}}",
								"approve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Claim Chore",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}/claim",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chores",
								"{{chore_uuid}}",
								"claim"
							]
						}
					},
					"response": []
				},
				{
					"name": "Complete Chore",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}/complete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chores",
								"{{chore_uuid}}",
								"complete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Chore",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}/verify",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"chores",
								"{{chore_uuid}}",
								"verify"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Points",
			"item": [
				{
					"name": "Get All User Points",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/points/{{home_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"points",
								"{{home_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Points",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/points/{{home_id}}/{{user_email}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"points",
								"{{home_id}}",
								"{{user_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Points to User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"delta\": 10\n}"
						},
						"url": {
							"raw": "{{base_url}}/points/{{home_id}}/{{user_email}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"points",
								"{{home_id}}",
								"{{user_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Points",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"points\": 50\n}"
						},
						"url": {
							"raw": "{{base_url}}/points/{{home_id}}/{{user_email}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"points",
								"{{home_id}}",
								"{{user_email}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Disputes",
			"item": [
				{
					"name": "Get Disputes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/disputes?status=pending",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"disputes"
							],
							"query": [
								{
									"key": "status",
									"value": "pending"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dispute",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"choreId\": \"{{chore_uuid}}\",\n  \"reason\": \"{{dispute_reason}}\",\n  \"imageUrl\": \"{{dispute_image_url}}\",\n  \"disputerEmail\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/disputes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"disputes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve Dispute",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/disputes/{{dispute_uuid}}/approve",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"disputes",
								"{{dispute_uuid}}",
								"approve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reject Dispute",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/disputes/{{dispute_uuid}}/reject",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"disputes",
								"{{dispute_uuid}}",
								"reject"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Activity",
			"item": [
				{
					"name": "Get Recent Activity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/activities?homeId={{home_id}}&timeFrame=7d",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"activities"
							],
							"query": [
								{
									"key": "homeId",
									"value": "{{home_id}}"
								},
								{
									"key": "timeFrame",
									"value": "7d"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Todos",
			"item": [
				{
					"name": "Get Todo Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/{{chore_uuid}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{chore_uuid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Approvals",
			"item": [
				{
					"name": "Get Approval Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/approvals/{{chore_uuid}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"approvals",
								"{{chore_uuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vote for Approval",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userEmail\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/approvals/{{chore_uuid}}/vote",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"approvals",
								"{{chore_uuid}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Vote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userEmail\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/approvals/{{chore_uuid}}/unvote",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"approvals",
								"{{chore_uuid}}",
								"unvote"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-generate UUIDs if not set",
					"if (!pm.environment.get('chore_uuid')) {",
					"    pm.environment.set('chore_uuid', pm.variables.replaceIn('{{$guid}}'));",
					"}",
					"if (!pm.environment.get('dispute_uuid')) {",
					"    pm.environment.set('dispute_uuid', pm.variables.replaceIn('{{$guid}}'));",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Common test script",
					"pm.test(\"Status code is 200 or 201 or 204\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
					"});",
					"",
					"pm.test(\"Response time is less than 2000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});",
					"",
					"// Auto-save IDs from responses",
					"if (pm.response.code === 201) {",
					"    const response = pm.response.json();",
					"    if (response.id) {",
					"        pm.environment.set('home_id', response.id);",
					"    }",
					"    if (response.uuid) {",
					"        pm.environment.set('chore_uuid', response.uuid);",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:4000",
			"type": "string"
		}
	]
}
