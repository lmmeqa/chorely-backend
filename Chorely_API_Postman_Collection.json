{
	"info": {
		"_postman_id": "chorely-api-collection",
		"name": "Chorely API",
		"description": "Complete API collection for testing Chorely backend endpoints with useful flows",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üöÄ Quick Start Flow",
			"item": [
				{
					"name": "1. Create Home",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{home_name}}\",\n  \"weekly_point_quota\": {{home_quota}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/homes",
							"host": ["{{base_url}}"],
							"path": ["homes"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('home_id', response.id);",
									"    console.log('Home created with ID:', response.id);",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "2. Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\",\n  \"homeIds\": [\"{{home_id}}\"],\n  \"name\": \"{{user_name}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/user",
							"host": ["{{base_url}}"],
							"path": ["user"]
						}
					}
				},
				{
					"name": "3. Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/login",
							"host": ["{{base_url}}"],
							"path": ["user", "login"]
						}
					}
				}
			]
		},
		{
			"name": "üè† Homes",
			"item": [
				{
					"name": "Create Home",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{home_name}}\",\n  \"weeklyPointQuota\": {{home_quota}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/homes",
							"host": ["{{base_url}}"],
							"path": ["homes"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('home_id', response.id);",
									"    console.log('Home created with ID:', response.id);",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "Get All Homes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/homes",
							"host": ["{{base_url}}"],
							"path": ["homes"]
						}
					}
				},
				{
					"name": "Get Home by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/homes/{{home_id}}",
							"host": ["{{base_url}}"],
							"path": ["homes", "{{home_id}}"]
						}
					}
				},
				{
					"name": "Get Home Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/homes/{{home_id}}/users",
							"host": ["{{base_url}}"],
							"path": ["homes", "{{home_id}}", "users"]
						}
					}
				},
				{
					"name": "Update Home Quota",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"weeklyPointQuota\": {{home_quota}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/homes/{{home_id}}/quota",
							"host": ["{{base_url}}"],
							"path": ["homes", "{{home_id}}", "quota"]
						}
					}
				}
			]
		},
		{
			"name": "üë§ Users",
			"item": [
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\",\n  \"homeIds\": [\"{{home_id}}\"],\n  \"name\": \"{{user_name}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/user",
							"host": ["{{base_url}}"],
							"path": ["user"]
						}
					}
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/login",
							"host": ["{{base_url}}"],
							"path": ["user", "login"]
						}
					}
				},
				{
					"name": "Get User by Email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/{{user_email}}",
							"host": ["{{base_url}}"],
							"path": ["user", "{{user_email}}"]
						}
					}
				},
				{
					"name": "Get User Homes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/{{user_email}}/home",
							"host": ["{{base_url}}"],
							"path": ["user", "{{user_email}}", "home"]
						}
					}
				},
				{
					"name": "Join Home",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\",\n  \"homeId\": \"{{home_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/join",
							"host": ["{{base_url}}"],
							"path": ["user", "join"]
						}
					}
				}
			]
		},
		{
			"name": "üßπ Chores",
			"item": [
				{
					"name": "Create Chore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{chore_name}}\",\n  \"description\": \"{{chore_description}}\",\n  \"time\": \"{{chore_time}}\",\n  \"icon\": \"{{chore_icon}}\",\n  \"home_id\": \"{{home_id}}\",\n  \"points\": {{chore_points}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/chores",
							"host": ["{{base_url}}"],
							"path": ["chores"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('chore_uuid', response.uuid);",
									"    console.log('Chore created with UUID:', response.uuid);",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "Get Chore by UUID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}",
							"host": ["{{base_url}}"],
							"path": ["chores", "{{chore_uuid}}"]
						}
					}
				},
				{
					"name": "Get Available Chores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/available/{{home_id}}",
							"host": ["{{base_url}}"],
							"path": ["chores", "available", "{{home_id}}"]
						}
					}
				},
				{
					"name": "Get Unapproved Chores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/unapproved/{{home_id}}",
							"host": ["{{base_url}}"],
							"path": ["chores", "unapproved", "{{home_id}}"]
						}
					}
				},
				{
					"name": "Get User Chores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/user?email={{user_email}}&homeId={{home_id}}",
							"host": ["{{base_url}}"],
							"path": ["chores", "user"],
							"query": [
								{
									"key": "email",
									"value": "{{user_email}}"
								},
								{
									"key": "homeId",
									"value": "{{home_id}}"
								}
							]
						}
					}
				},
				{
					"name": "Approve Chore",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}/approve",
							"host": ["{{base_url}}"],
							"path": ["chores", "{{chore_uuid}}", "approve"]
						}
					}
				},
				{
					"name": "Claim Chore",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}/claim",
							"host": ["{{base_url}}"],
							"path": ["chores", "{{chore_uuid}}", "claim"]
						}
					}
				},
				{
					"name": "Complete Chore",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}/complete",
							"host": ["{{base_url}}"],
							"path": ["chores", "{{chore_uuid}}", "complete"]
						}
					}
				}
			]
		},
		{
			"name": "‚úÖ Approvals",
			"item": [
				{
					"name": "Get Approval Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/approvals/{{chore_uuid}}",
							"host": ["{{base_url}}"],
							"path": ["approvals", "{{chore_uuid}}"]
						}
					}
				},
				{
					"name": "Vote for Chore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userEmail\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/approvals/{{chore_uuid}}/vote",
							"host": ["{{base_url}}"],
							"path": ["approvals", "{{chore_uuid}}", "vote"]
						}
					}
				},
				{
					"name": "Remove Vote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userEmail\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/approvals/{{chore_uuid}}/unvote",
							"host": ["{{base_url}}"],
							"path": ["approvals", "{{chore_uuid}}", "unvote"]
						}
					}
				}
			]
		},
		{
			"name": "üí∞ Points",
			"item": [
				{
					"name": "Get All Points in Home",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/points/{{home_id}}",
							"host": ["{{base_url}}"],
							"path": ["points", "{{home_id}}"]
						}
					}
				},
				{
					"name": "Get User Points",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/points/{{home_id}}/{{user_email}}",
							"host": ["{{base_url}}"],
							"path": ["points", "{{home_id}}", "{{user_email}}"]
						}
					}
				},
				{
					"name": "Add Points to User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"delta\": {{points_delta}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/points/{{home_id}}/{{user_email}}",
							"host": ["{{base_url}}"],
							"path": ["points", "{{home_id}}", "{{user_email}}"]
						}
					}
				},
				{
					"name": "Remove Points from User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"delta\": -{{points_delta}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/points/{{home_id}}/{{user_email}}",
							"host": ["{{base_url}}"],
							"path": ["points", "{{home_id}}", "{{user_email}}"]
						}
					}
				},
				{
					"name": "Update User Points",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"points\": {{points_delta}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/points/{{home_id}}/{{user_email}}",
							"host": ["{{base_url}}"],
							"path": ["points", "{{home_id}}", "{{user_email}}"]
						}
					}
				}
			]
		},
		{
			"name": "‚öñÔ∏è Disputes",
			"item": [
				{
					"name": "Create Dispute",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"choreId\": \"{{chore_uuid}}\",\n  \"disputerEmail\": \"{{user_email}}\",\n  \"reason\": \"{{dispute_reason}}\",\n  \"imageUrl\": \"{{dispute_image_url}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/disputes",
							"host": ["{{base_url}}"],
							"path": ["disputes"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('dispute_uuid', response.uuid);",
									"    console.log('Dispute created with UUID:', response.uuid);",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "Get Dispute by UUID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/disputes/{{dispute_uuid}}",
							"host": ["{{base_url}}"],
							"path": ["disputes", "{{dispute_uuid}}"]
						}
					}
				},
				{
					"name": "Get All Disputes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/disputes",
							"host": ["{{base_url}}"],
							"path": ["disputes"]
						}
					}
				},
				{
					"name": "Approve Dispute",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/disputes/{{dispute_uuid}}/approve",
							"host": ["{{base_url}}"],
							"path": ["disputes", "{{dispute_uuid}}", "approve"]
						}
					}
				},
				{
					"name": "Reject Dispute",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/disputes/{{dispute_uuid}}/reject",
							"host": ["{{base_url}}"],
							"path": ["disputes", "{{dispute_uuid}}", "reject"]
						}
					}
				}
			]
		},
		{
			"name": "üìù Todos",
			"item": [
				{
					"name": "Create Todo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{todo_title}}\",\n  \"description\": \"{{todo_description}}\",\n  \"chore_id\": \"{{chore_uuid}}\",\n  \"order\": 0\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": ["{{base_url}}"],
							"path": ["todos"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('todo_uuid', response.id);",
									"    console.log('Todo created with ID:', response.id);",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "Get Todo by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/{{todo_uuid}}",
							"host": ["{{base_url}}"],
							"path": ["todos", "{{todo_uuid}}"]
						}
					}
				},
				{
					"name": "Get All Todos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos",
							"host": ["{{base_url}}"],
							"path": ["todos"]
						}
					}
				},

				{
					"name": "Get Todo Items for Chore",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/chore/{{chore_uuid}}",
							"host": ["{{base_url}}"],
							"path": ["todos", "chore", "{{chore_uuid}}"]
						}
					}
				}
			]
		},
		{
			"name": "üìä Activities",
			"item": [
				{
					"name": "Get Recent Activities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/activities?home_id={{home_id}}&limit=10",
							"host": ["{{base_url}}"],
							"path": ["activities"],
							"query": [
								{
									"key": "home_id",
									"value": "{{home_id}}"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "üîÑ Complete Chore Flow",
			"item": [
				{
					"name": "1. Create Chore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{chore_name}}\",\n  \"description\": \"{{chore_description}}\",\n  \"time\": \"{{chore_time}}\",\n  \"icon\": \"{{chore_icon}}\",\n  \"home_id\": \"{{home_id}}\",\n  \"points\": {{chore_points}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/chores",
							"host": ["{{base_url}}"],
							"path": ["chores"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('chore_uuid', response.uuid);",
									"    console.log('Chore created with UUID:', response.uuid);",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "2. Approve Chore",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}/approve",
							"host": ["{{base_url}}"],
							"path": ["chores", "{{chore_uuid}}", "approve"]
						}
					}
				},
				{
					"name": "3. Claim Chore",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}/claim",
							"host": ["{{base_url}}"],
							"path": ["chores", "{{chore_uuid}}", "claim"]
						}
					}
				},
				{
					"name": "4. Complete Chore",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/chores/{{chore_uuid}}/complete",
							"host": ["{{base_url}}"],
							"path": ["chores", "{{chore_uuid}}", "complete"]
						}
					}
				}
			]
		},
		{
			"name": "‚öñÔ∏è Dispute Flow",
			"item": [
				{
					"name": "1. Create Dispute",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"choreId\": \"{{chore_uuid}}\",\n  \"disputerEmail\": \"{{user_email}}\",\n  \"reason\": \"{{dispute_reason}}\",\n  \"imageUrl\": \"{{dispute_image_url}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/disputes",
							"host": ["{{base_url}}"],
							"path": ["disputes"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('dispute_uuid', response.uuid);",
									"    console.log('Dispute created with UUID:', response.uuid);",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "2. Approve Dispute",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/disputes/{{dispute_uuid}}/approve",
							"host": ["{{base_url}}"],
							"path": ["disputes", "{{dispute_uuid}}", "approve"]
						}
					}
				}
			]
		}
	]
}
